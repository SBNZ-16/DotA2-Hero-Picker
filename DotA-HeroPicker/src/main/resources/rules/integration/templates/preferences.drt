template header

preferredHeroFactor
preferredRoleFactor
preferredLaneFactor
enemyHeroDisadvantage
enemyLaneHeroDisadvantage


template "Role rules"

	rule "Enemy hero picked, update disadvantage"
		agenda-group "hero-statistics"
		when
			EnemyHeroPickedFact($pickedId: heroId)
			$recommendation: HeroRecommendationFact(hero.heroId != $pickedId)
		then
			double disadvantage = $recommendation.getHero().getDisadvantages().get($pickedId);
			$recommendation.setScore($recommendation.getScore() +  disadvantage * @{enemyHeroDisadvantage});
	end

	rule "Enemy hero picked is expected to show in my lane"
		agenda-group "hero-statistics"
		when
			EnemyHeroPickedFact($pickedId: heroId, goingToFaceInLane == true)
			$recommendation: HeroRecommendationFact(hero.heroId != $pickedId)
		then
			double disadvantage = $recommendation.getHero().getDisadvantages().get($pickedId);
			$recommendation.setScore($recommendation.getScore() +  disadvantage * @{enemyLaneHeroDisadvantage});
	end

	rule "Hero preferred"
		agenda-group "preferences"
		when
			HeroPreferredFact($heroId : heroId)
		then
			insert(new UpdateScoresFact(@{preferredHeroFactor}, 0, $heroId, null, null));
	end
	
	rule "Role preferred"
		agenda-group "preferences"
		when
			RolePreferredFact($role : role)
		then
			insert(new UpdateScoresFact(@{preferredRoleFactor}, 0, null, $role, null));
	end
	
	rule "Lane preferred"
		agenda-group "preferences"
		when
			LanePreferredFact($lane : lane)
		then
			insert(new UpdateScoresFact(@{preferredLaneFactor}, 0, null, null, $lane));
	end

end template